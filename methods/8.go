/*
Вибір приймача значення або вказівника

Існує дві причини використання приймача покажчика.

Перша - щоб метод міг модифікувати значення, на яке вказує його приймач.

Друга - щоб уникнути копіювання значення при кожному виклику методу. Це може бути більш ефективним, якщо 
приймач є великою структурою, наприклад.

У цьому прикладі і Scale, і Abs мають тип приймача *Vertex, хоча метод Abs не повинен модифікувати свій 
приймач.

Взагалі, всі методи даного типу повинні мати приймачі або значення, або вказівники, але не суміш обох типів. 
(На наступних сторінках ми побачимо чому).
*/
package main

import (
	"fmt"
	"math"
)

type Vertex struct {
	X, Y float64
}

func (v *Vertex) Scale(f float64) {
	v.X = v.X * f
	v.Y = v.Y * f
}

func (v *Vertex) Abs() float64 {
	return math.Sqrt(v.X*v.X + v.Y*v.Y)
}

func main() {
	v := &Vertex{3, 4}
	fmt.Printf("Before scaling: %+v, Abs: %v\n", v, v.Abs())
	v.Scale(5)
	fmt.Printf("After scaling: %+v, Abs: %v\n", v, v.Abs())
}
